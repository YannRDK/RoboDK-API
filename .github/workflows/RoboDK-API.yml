name: RoboDK

on: 
  pull_request:
  push:
  workflow_dispatch: # Run workflow manually
    branches: [master]
    paths:
      - "Python/**"
      - "!Python/Examples/**"
      - "!Python/setup.py"
      - "**.py"

env:
  BUILD_TYPE: Release

jobs:
  build_linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - name: Setup Python (x64)
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Display Python version (x64)
        run: |
          python -c "import sys; print(sys.version)"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        if: always()
        run: |
          cd ${{ github.workspace }}/Python/tests
          python -m pip install -r requirements.txt
      
      - name: Run Tests
        if: always()
        run: |
          cd ${{ github.workspace }}/Python/tests
          nose2 --config
          nose2 testNames [test_import_modules.py, test_RobotSim6Axes.py]
      
      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: Test Results
          path: | 
           /Python/tests/results.xml
        
      - name: Upload HTML Report
        uses: actions/upload-artifact@v2
        with:
          name: HTML Report
          path: | 
           /Python/tests/report.html
  
  build_windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - name: Setup Python (x64)
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      
      - name: Display Python version (x64)
        run: python -c "import sys; print(sys.version)"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Assert Location
        run: |
          cd ${{ github.workspace }}
          ls
      
      - name: Install Dependencies
        run: |
          cd ${{ github.workspace }}\Python\tests
          python -m pip install -r requirements.txt
      
      - name: Run Tests
        run: |
          nose2 --config